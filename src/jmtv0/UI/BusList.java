/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jmtv0.UI;

import jmtv0.pkg0.Utility.HibernateUtil;
import Hibernate.Entity.CLASS;
import Hibernate.Entity.FEEBREAKUP;
import Hibernate.Entity.FEEDETAILS;
import Hibernate.Entity.STUDENT;
import Hibernate.Entity.STUDENTLEDGER;
import Hibernate.Entity.BUSFEE;
import com.sun.org.apache.bcel.internal.generic.LCONST;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.List;
import javax.swing.ComboBoxModel;
import jmtv0.pkg0.Utility.Utility;
import org.hibernate.Session;

/**
 *
 * @author Lokesh
 */
public class BusList extends javax.swing.JPanel {

    private static final int SplitDividerDefault = 500;
    private static final int SplitDividerEnlarged = 400;
    private Vector searchData = null;
    private final DefaultTableModel dtmClassTable;
    private JFrame jf = null;
    private BUSFEE mBusFee;

    /**
     * Creates new form SalesQuote
     */
    public BusList() {
        initComponents();
        dtmClassTable = (DefaultTableModel) busTable.getModel();
        jSplitPane1.setDividerLocation(SplitDividerEnlarged);
        jf = new JFrame();
        jf.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        InitGui();
        serachButtonAction();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        newButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        ckBoxEdit = new javax.swing.JCheckBox();
        cancleButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        tfVillageName = new javax.swing.JTextField();
        tfFare = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfBusName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfDriverName = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        tfBusNumber = new javax.swing.JTextField();
        tfCellNumber = new javax.swing.JTextField();
        StudentList = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableStudentList = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        Search1 = new javax.swing.JLabel();
        Search2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        Search3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        Search4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        busTable = new javax.swing.JTable();
        jTextField4 = new javax.swing.JTextField();
        Search5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        Search6 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(500);
        jSplitPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);

        newButton.setText("New");
        newButton.setFocusable(false);
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(newButton);

        saveButton.setText("Save");
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(saveButton);

        ckBoxEdit.setText("EDIT");
        ckBoxEdit.setFocusable(false);
        ckBoxEdit.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        ckBoxEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ckBoxEdit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ckBoxEditItemStateChanged(evt);
            }
        });
        jToolBar1.add(ckBoxEdit);

        cancleButton.setText("Cancle");
        cancleButton.setFocusable(false);
        cancleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(cancleButton);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setEnabled(false);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel7.setVerifyInputWhenFocusTarget(false);

        jLabel25.setText("Bus Name");
        jLabel25.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        tfFare.setEditable(false);

        jLabel28.setText("Fare");
        jLabel28.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel52.setText("Village Name");
        jLabel52.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel1.setText("Cell Number");

        tfBusName.setEditable(false);

        jLabel3.setText("Driver Name");

        tfDriverName.setEditable(false);
        tfDriverName.setColumns(4);

        jLabel26.setText("Bus Number");
        jLabel26.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        tfBusNumber.setEditable(false);
        tfBusNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfBusNumberFocusLost(evt);
            }
        });
        tfBusNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBusNumberActionPerformed(evt);
            }
        });
        tfBusNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBusNumberKeyTyped(evt);
            }
        });

        tfCellNumber.setEditable(false);
        tfCellNumber.setColumns(4);
        tfCellNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfCellNumberKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCellNumberKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfBusNumber)
                    .addComponent(tfVillageName)
                    .addComponent(tfBusName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfDriverName)
                            .addComponent(tfCellNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(tfFare, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(489, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(tfFare)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfDriverName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfCellNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfVillageName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel52)
                                .addComponent(jLabel28))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfBusName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel25))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(tfBusNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(874, 874, 874))
        );

        jPanel3.add(jPanel7, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("BusFee", jPanel3);

        StudentList.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.BorderLayout());

        tableStudentList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableStudentList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 961, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 868, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        StudentList.add(jPanel4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("StudentList", StudentList);

        jPanel1.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel1);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        Search1.setText("A/C Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(Search1, gridBagConstraints);

        Search2.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        Search2.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 350;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel6.add(Search2, gridBagConstraints);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jTextField1, gridBagConstraints);

        Search3.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(Search3, gridBagConstraints);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jTextField2, gridBagConstraints);

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jTextField3, gridBagConstraints);

        Search4.setText("Village");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(Search4, gridBagConstraints);

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel6.add(jButton6, gridBagConstraints);

        busTable.setAutoCreateRowSorter(true);
        busTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "VillageName", "Fare", "Bus Number", "Bus Name", "Driver Name", "Driver Cell"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        busTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        busTable.getTableHeader().setReorderingAllowed(false);
        busTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                busTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(busTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 400;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jScrollPane1, gridBagConstraints);

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jTextField4, gridBagConstraints);

        Search5.setText("Phone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(Search5, gridBagConstraints);

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel6.add(jTextField5, gridBagConstraints);

        Search6.setText("Ocu./LastName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel6.add(Search6, gridBagConstraints);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel5);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        serachButtonAction();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9'))
                && (caracter != '\b')) {
            evt.consume();
        }   // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        checkOfSave();
        serachButtonAction();        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        checkOfSave();

        serachButtonAction();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        checkOfSave();

        serachButtonAction();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        checkOfSave();

        serachButtonAction();
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        checkOfSave();
        serachButtonAction();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void busTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busTableMouseClicked
        if (!checkOfSave()) {
            Vector colsFeeBRUP = new Vector();
            colsFeeBRUP.addElement("Month");
            colsFeeBRUP.add("Tution Fee");
            colsFeeBRUP.add("Library Fee");
            colsFeeBRUP.add("Stationary Fee");
            colsFeeBRUP.add("Dress Fee");
            colsFeeBRUP.add("Misc. Fee");
            colsFeeBRUP.add("Total Fee");
            ckBoxEdit.setSelected(false);
            int ids = busTable.getSelectedRow();
            Object o = dtmClassTable.getValueAt(ids, 0);
            if (dtmClassTable.getValueAt(ids, 0) != null) {
                Session ses = HibernateUtil.getSessionFactory().openSession();
                try {
                    mBusFee = Utility.getBusWithID((int) dtmClassTable.getValueAt(ids, 0), ses);
                    updateClassForm();
                    Vector rowsFeeBRUP = new Vector();
                    newButton.setEnabled(true);
                } catch (Exception e) {
                } finally {
                    ses.close();
                }
                UpdateStudentList();
            }
        }
    }//GEN-LAST:event_busTableMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        SaveButtonAction();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        newButton.setEnabled(false);
        ckBoxEdit.setSelected(false);
        ckBoxEdit.setEnabled(false);
        tfVillageName.setText("");
        tfVillageName.setEditable(true);
        tfBusName.setEditable(true);
        tfDriverName.setEditable(true);
        tfFare.setEditable(true);
        tfCellNumber.setEditable(true);
        tfBusNumber.setEditable(true);
        cancleButton.setEnabled(true);
        saveButton.setEnabled(true);
        Calendar ssr = Calendar.getInstance();

    }//GEN-LAST:event_newButtonActionPerformed

    private void ckBoxEditItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ckBoxEditItemStateChanged
        if (tfVillageName.getText().length() > 0) {
            if (ckBoxEdit.isSelected()) {
                newButton.setEnabled(false);
                cancleButton.setEnabled(true);
                saveButton.setEnabled(true);
                ckBoxEdit.setEnabled(false);
                tfVillageName.setEditable(true);
                tfBusName.setEditable(true);
                tfDriverName.setEditable(true);
                tfFare.setEditable(true);
                tfCellNumber.setEditable(true);
                tfBusNumber.setEditable(true);
            }
        } else {
            ckBoxEdit.setSelected(false);
        }
    }//GEN-LAST:event_ckBoxEditItemStateChanged

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        checkOfSave();
        serachButtonAction();        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        checkOfSave();
        serachButtonAction();        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        checkOfSave();
        serachButtonAction();        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        checkOfSave();
        serachButtonAction();        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        checkOfSave();
        serachButtonAction();        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyReleased

    private void cancleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleButtonActionPerformed
        InitGui();

    }//GEN-LAST:event_cancleButtonActionPerformed

    private void tfCellNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCellNumberKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < '0') || (caracter > '9'))
            && (caracter != '\b')) {
            evt.consume();
        } else {
            if ((caracter == '.') && tfFare.getText().contains(".")) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_tfCellNumberKeyTyped

    private void tfCellNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCellNumberKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCellNumberKeyReleased

    private void tfBusNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBusNumberKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBusNumberKeyTyped

    private void tfBusNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBusNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBusNumberActionPerformed

    private void tfBusNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfBusNumberFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBusNumberFocusLost
    public void as() {
//        int x = jSplitPane1.getDividerLocation();
//        System.out.println("x = " + x);
//        if (x == SplitDividerDefault) {
//            jButton1.setText("<");
//            jSplitPane1.setDividerLocation(SplitDividerEnlarged);
//        } else {
//            jButton1.setText(">");
//            jSplitPane1.setDividerLocation(SplitDividerDefault);
//        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Search1;
    private javax.swing.JLabel Search2;
    private javax.swing.JLabel Search3;
    private javax.swing.JLabel Search4;
    private javax.swing.JLabel Search5;
    private javax.swing.JLabel Search6;
    private javax.swing.JPanel StudentList;
    private javax.swing.JTable busTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancleButton;
    private javax.swing.JCheckBox ckBoxEdit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton newButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTable tableStudentList;
    private javax.swing.JTextField tfBusName;
    private javax.swing.JTextField tfBusNumber;
    private javax.swing.JTextField tfCellNumber;
    private javax.swing.JTextField tfDriverName;
    private javax.swing.JTextField tfFare;
    private javax.swing.JTextField tfVillageName;
    // End of variables declaration//GEN-END:variables

    private void serachButtonAction() {
        searchData = Utility.searchBuses();
        Vector cols = new Vector();
        cols.addElement("ID");
        cols.addElement("Village");
        cols.addElement("Fare");
        cols.addElement("Bus");
        cols.addElement("Bus#");
        cols.addElement("Driver");
        cols.addElement("Cell");
        dtmClassTable.setDataVector(searchData, cols);
    }

    private void InitGui() {
        tfVillageName.setText("");
        newButton.setEnabled(true);
        tfBusName.setEditable(false);
        tfDriverName.setEditable(false);
        tfVillageName.setEditable(false);
        saveButton.setEnabled(false);
        tfFare.setEditable(false);
        tfVillageName.setEditable(false);
        ckBoxEdit.setSelected(false);
        ckBoxEdit.setEnabled(true);
        cancleButton.setEnabled(false);
        saveButton.setEnabled(false);
    }

    private boolean checkOfSave() {
        if (!newButton.isEnabled() || ckBoxEdit.isSelected()) {
            int choice = JOptionPane.showConfirmDialog(null, "Do You Want To Save Details?");
            if (choice == 0) {
                return true;
            } else if (choice == 1) {
                InitGui();
            } else if (choice == 2) {
                InitGui();
            }
            System.out.println(choice);
        }
        return false;
    }

    private void serachActive() {
//        resetData();
        //        cb.setVillage(jTextField3.getText());
//        cb.setPhone_1(jTextField4.getText());
//        cb.setPhone_2(jTextField4.getText());
//        cb.setFatherName(jTextField5.getText());
//        if (jTextField1.getText().length() != 0) {
//            cb.setIdCustomerDetails(Integer.parseInt(jTextField1.getText()));
//        } else {
//            cb.setIdCustomerDetails(0);
//        }
//        searchData = mStudent.customerSearch();
        Vector cols = new Vector();
        cols.addElement("A/C No.");
        cols.addElement("Name");
        cols.addElement("Father Name");
        cols.addElement("Village");
        cols.addElement("Phone_1");
        cols.addElement("Vhone_2");

//        dtm.setDataVector(searchData, cols);
    }

    private void printToPDF() {

        //    int roc = dtm.size(), noc = ((Vector) dtm.elementAt(0)).size();
//        PdfPTable table = new PdfPTable(8);
//        PdfPCell cell = new PdfPCell(new Phrase("ACCOUNT NUMBER :" + mStudent.getAccountNumber()));
//        cell.setColspan(8);
//        table.addCell(cell);
//        cell = new PdfPCell(new Phrase("Name :" + mStudent.getName()));
//        cell.setColspan(3);
//        table.addCell(cell);
//        cell = new PdfPCell(new Phrase("Ocup./Surname :" + mStudent.getFatherName()));
//        cell.setColspan(3);
//        table.addCell(cell);
//        cell = new PdfPCell(new Phrase("Villege  :" + mStudent.getVillage()));
//        cell.setColspan(2);
//        table.addCell(cell);
//        cell = new PdfPCell(new Phrase("Phone  :" + mStudent.getPhone_1() + "," + mStudent.getPhone_2()));
//        cell.setColspan(8);
//        table.addCell(cell);
//
//        Vector cols = new Vector();
//        cols.addElement("Sr No.");
//        cols.addElement("Date");
//        cols.addElement("Particulars");
//        cols.addElement("Folio");
//        cols.addElement("Debit");
//        cols.addElement("Credit");
//        cols.addElement("Dr. or Cr.");
//        cols.addElement("Balance");
//
//        for (int i = 0; i < cols.size(); i++) {
//            String stmp = "" + cols.elementAt(i);
//            cell = new PdfPCell(new Phrase(stmp));
//            cell.setColspan(1);
//            table.addCell(cell);
//        }
//        Vector dtm = lb.getDetailsof(mStudent.getAccountNumber());
//
//        for (int i = 0; i < dtm.size(); i++) {
//
//            Vector tv = (Vector) dtm.elementAt(i);
//            for (int j = 0; j < tv.size(); j++) {
//                String stmp = "" + tv.elementAt(j);
//                cell = new PdfPCell(new Phrase(stmp));
//                cell.setColspan(1);
//                table.addCell(cell);
//            }
//        }
//        if (dtm.size() < 60) {
//            for (int i = 0; i < (30 - dtm.size()) * 8; i++) {
//                cell = new PdfPCell(new Phrase(" "));
//                cell.setColspan(1);
//                table.addCell(cell);
//            }
//        }
//        Document document = new Document();
//        try {
//            String fname = mStudent.getAccountNumber();
//            if (mStudent.getAccountNumber().length() == 0) {
//                fname = mStudent.getSrNo() + "";
//            }
//            PdfWriter.getInstance(document, new FileOutputStream("D:\\MAKIMS\\" + fname + ".PDF"));
//            document.open();
//            document.add(table);
//            document.close();
//            JOptionPane.showMessageDialog(null, "Document Printed Sucessfully and Stored.");
//        } catch (Exception ex) {
//            Logger.getLogger(NewStudent.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private int saveModifyClass() {
        boolean isEdit = ckBoxEdit.isSelected();
        if (isEdit) {
            if (mBusFee == null) {
                return -1;
            }
        }
        if (ckBoxEdit.isSelected() || !newButton.isEnabled()) {
            String str = tfVillageName.getText();
            if (str.length() != 0) {
                Session ses = HibernateUtil.getSessionFactory().openSession();
                BUSFEE lBusFee = null;
                if (isEdit) {
                    lBusFee = Utility.getBusWithID(mBusFee.getIdBusFee(), ses);
                } else {
                    lBusFee = new BUSFEE();
                }
                lBusFee.setVILLAGENAME(str);
                str = tfFare.getText();
                if (str.length() > 0) {
                    lBusFee.setFARE(Float.parseFloat(str));
                } else {
                    lBusFee.setFARE((float) 0.0);
                }
                str = tfBusName.getText();
                if (str.length() > 0) {
                    lBusFee.setBUSNAME(str);
                }
                str = tfBusNumber.getText();
                if (str.length() > 0) {
                    lBusFee.setBUSNUMBER(str);
                }
                str = tfDriverName.getText();
                if (str.length() > 0) {
                    lBusFee.setDRIVERNAME(str);
                }
                str = tfCellNumber.getText();
                if (str.length() > 0) {
                    lBusFee.setDRIVERCELL(str);
                }
                ses.beginTransaction();
                try {
                    if (isEdit) {
                        ses.saveOrUpdate(lBusFee);

                    } else {
                        ses.save(lBusFee);
                    }
                } catch (Exception e) {
                    ses.getTransaction().rollback();
                    e.printStackTrace();
                    return -2;
                }
                ses.getTransaction().commit();
                ses.close();
                return 1;
            }
        } else {
            return -1;
        }
        return -1;
    }

    private void updateClassForm() {
        if (mBusFee != null) {
            tfBusName.setText(mBusFee.getBUSNAME());
            tfBusNumber.setText(mBusFee.getBUSNUMBER());
            tfDriverName.setText(mBusFee.getDRIVERNAME());
            tfCellNumber.setText(mBusFee.getDRIVERCELL());
            tfFare.setText(mBusFee.getFARE() + "");
            tfVillageName.setText(mBusFee.getVILLAGENAME());
        }
    }

    private void UpdateStudentList() {
        if (mBusFee != null) {
            Vector colsStudentList = new Vector();
            colsStudentList.add("SR NO");
            colsStudentList.add("SSO");
            colsStudentList.add("Name");
            colsStudentList.add("Father Name");
            colsStudentList.add("Total ");
            colsStudentList.add("Penalty");
            colsStudentList.add("Paid");
            colsStudentList.add("Due");
            Vector rows = new Vector();
            DefaultTableModel dtmStudentList = (DefaultTableModel) tableStudentList.getModel();
            Session ses = HibernateUtil.getSessionFactory().openSession();

//                List studens = Utility.getStudentWithClassID(mClass.getIdClass(), ses);
//                for (Object o : studens) {
//                    Vector row = new Vector();
//                    STUDENT s = (STUDENT) o;
//                    if (s != null) {
//                        int imon = Utility.getMonthValueFromMonthName(mon);
//                        FEEBREAKUP frb = Utility.getFeeBRUPWithFeeDetailsIDAndMonth(
//                                mClass.getFeeDetails().getIdFeeDetails(), imon, ses);
//                        STUDENTLEDGER sld = Utility.getStudentLDGRWithFeeBRUPIdAndSTDNTID(s.getIdStudent(), frb.getIdFeeBRUP(), ses);
//                        if (sld != null) {
//                            row.add(s.getIdStudent());
//                            row.add(s.getSSO());
//                            String name = s.getFIRST_NAME();
//                            if (s.getLAST_NAME() != null) {
//                                name += s.getLAST_NAME();
//                            }
//                            row.add(name);
//                            row.add(s.getFATHERS_NAME());
//                            float totalFee = frb.getTotalFee();
//                            double penalty = sld.getPENALTY();
//                            Date dueDate = frb.getDueDate();
//                            if (dueDate != null) {
//                                Calendar du = Calendar.getInstance();
//                                du.setTime(dueDate);
//                                Calendar cu = Calendar.getInstance();
//                                cu.setTime(new Date());
//                                int diffYear = cu.get(Calendar.YEAR) - du.get(Calendar.YEAR);
//                                int diffMonth = diffYear * 12 + cu.get(Calendar.MONTH) - du.get(Calendar.MONTH);
////                                if (mClass.getPenaltyCycle() == 0) {
////                                    if (diffMonth > 0) {
////                                        penalty = (double) totalFee
////                                                * Math.pow((1.0 + ((double) mClass.getLateFeePercent() / 100.0)), diffMonth);
////                                        penalty = penalty - totalFee;
////                                    }
////                                }
//                            }
//                            penalty = Utility.roundToDecimal(penalty);
//                            float grandTotla = totalFee + (float) penalty;
//                            float paid = sld.getAMT_TO_PAID();
//                            float due = grandTotla - paid;
//                            row.add(totalFee);
//                            row.add(penalty);
//                            row.add(paid);
//                            row.add(due);
//
//                        }
//                    }
//                    rows.add(row);
//                }
//
//            } catch (Exception e) {
//            } finally {
//                ses.close();
//            }
//        List studens = Utility.get
            dtmStudentList.setDataVector(rows, colsStudentList);

        }

    }

    private void SaveButtonAction() {
        int lRet = saveModifyClass();
        if (lRet == 1) {
            JOptionPane.showMessageDialog(null, "Class Added Succesfully..");
            newButton.setEnabled(true);
            ckBoxEdit.setSelected(false);
            ckBoxEdit.setEnabled(true);
            tfVillageName.setEditable(false);
            tfFare.setEditable(false);
            cancleButton.setEnabled(false);
            saveButton.setEnabled(false);
            serachButtonAction();
        } else {
            JOptionPane.showMessageDialog(null, "Error Occured :" + lRet);
        }
    }
}
