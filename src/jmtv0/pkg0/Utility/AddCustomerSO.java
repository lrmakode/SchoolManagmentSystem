/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jmtv0.pkg0.Utility;

import Hibernate.Entity.STUDENT;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;

/**
 *
 * @author lrmakode
 */
public class AddCustomerSO extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;
    private DefaultTableModel productDTM = null;
    private Vector productDataVector = null;
    private UpdateFormData npo = null;

    /**
     * Creates new form addProductDialog
     */
    public AddCustomerSO(UpdateFormData aThis) {
        super((Frame) null, "Add Customer", true);
        setUndecorated(true);
        initComponents();
        npo = aThis;
//        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
        productDTM = (DefaultTableModel) productTable.getModel();
        productDataVector = new Vector();
        fillFormData();
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        customerNameTF = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        okButton1 = new javax.swing.JButton();
        tfSSO = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        tfAddCustomer = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cancelButton.setText("Close");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.setEnabled(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        customerNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTFActionPerformed(evt);
            }
        });
        customerNameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerNameTFKeyReleased(evt);
            }
        });

        lastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameActionPerformed(evt);
            }
        });
        lastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lastNameKeyReleased(evt);
            }
        });

        jLabel3.setText("Search");

        jLabel4.setText("Last Name");

        okButton1.setText("Refresh");
        okButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButton1ActionPerformed(evt);
            }
        });

        tfSSO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSSOActionPerformed(evt);
            }
        });
        tfSSO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSSOKeyReleased(evt);
            }
        });

        jLabel6.setText("SSO");

        Name.setText("Customer");

        tfAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAddCustomerActionPerformed(evt);
            }
        });
        tfAddCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfAddCustomerKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSSO, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lastName)
                                .addComponent(customerNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(okButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 400, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSSO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfAddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addButton)
                        .addComponent(cancelButton)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(132, Short.MAX_VALUE)))
        );

        getRootPane().setDefaultButton(addButton);
        getRootPane().setDefaultButton(addButton);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 34, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Category", "Item", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void okButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButton1ActionPerformed
        refreshButtonAction();
    }//GEN-LAST:event_okButton1ActionPerformed

    private void customerNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTFActionPerformed
        refreshButtonAction();
    }//GEN-LAST:event_customerNameTFActionPerformed

    private void customerNameTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameTFKeyReleased
        refreshButtonAction();
    }//GEN-LAST:event_customerNameTFKeyReleased

    private void lastNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameKeyReleased
        refreshButtonAction();

// TODO add your handling code here:
    }//GEN-LAST:event_lastNameKeyReleased

    private void lastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameActionPerformed
        refreshButtonAction();
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        int ids = productTable.getSelectedRow();

        int name = (Integer) productDTM.getValueAt(ids, 0);
        if (productDTM.getValueAt(ids, 0) != null) {
            npo.updateVNData(name);
            setVisible(false);
            dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_productTableMouseClicked

    private void tfSSOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSSOActionPerformed
        refreshButtonAction();        // TODO add your handling code here:
    }//GEN-LAST:event_tfSSOActionPerformed

    private void tfSSOKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSSOKeyReleased
        refreshButtonAction();        // TODO add your handling code here:
    }//GEN-LAST:event_tfSSOKeyReleased

    private void tfAddCustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAddCustomerKeyReleased
        if (tfAddCustomer.getText().length() > 0) {
            addButton.setEnabled(true);
        } else {
            addButton.setEnabled(false);
        }      // TODO add your handling code here:
    }//GEN-LAST:event_tfAddCustomerKeyReleased

    private void tfAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAddCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAddCustomerActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //        doClose(RET_OK);
    }//GEN-LAST:event_addButtonActionPerformed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
//        avp.setCurrentText(itemNameAddTF.getText());
        setVisible(false);
        dispose();
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Name;
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField customerNameTF;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastName;
    private javax.swing.JButton okButton1;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField tfAddCustomer;
    private javax.swing.JTextField tfSSO;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;

    void setText(String currentText) {
    }

    private void fillFormData() {
        Session ses = HibernateUtil.getSessionFactory().openSession();
        String query = "from STUDENT";
        List l = Utility.executeHQLQuery(query, ses);
        Vector cols = new Vector();
        cols.add("Sr No");
        cols.add("SSO");
        cols.add("Name");
        cols.add("Father");
        cols.add("class");
        cols.add("Last Name");

//        Vector chka = Utility.getItemVector(nv.getDataVector(), 0);
        Vector rows = new Vector();
        for (Object o : l) {
            STUDENT pc = (STUDENT) o;
            Vector onerow = new Vector();
            onerow.add(pc.getIdStudent());
            onerow.add(pc.getSSO());
            onerow.add(pc.getFIRST_NAME());
            onerow.add(pc.getFATHERS_NAME());
            if (pc.getIdClass() != null) {
                onerow.add(pc.getIdClass().getNameOfClass());
            }else {
                onerow.add("NA");
            }
            onerow.add(pc.getLAST_NAME());
//            if (!chka.contains(pc.getVName().toLowerCase())) {
//                onerow.add(pc.getVName());
//                onerow.add(pc.getContact().getFullName());
//                onerow.add(pc.getBalance());
//                onerow.add(pc.getProduct().getPrice());
//                onerow.add(Utility.getQunatityOfProduct(pc.getProduct().getItemCode(), vendorSession));
            rows.add(onerow);
//            }
            productDataVector.add(onerow);

        }
        productDTM.setDataVector(rows, cols);
        ses.close();
//        productDataVector = rows;
    }

    private void refreshButtonAction() {
//        Vector data = productDTM.getDataVector();
        Vector cols = new Vector();
        cols.add("Sr No");
        cols.add("SSO");
        cols.add("Name");
        cols.add("Father");
        cols.add("class");
        cols.add("Last Name");

        String ins = customerNameTF.getText();
        String lastNameS = lastName.getText();
        String sso = tfSSO.getText();
        Vector rows = new Vector();
        for (Object o : productDataVector) {
            Vector oneRow = (Vector) o;
            if (ins.length() != 0 && lastNameS.length() != 0) {
                if ((oneRow.get(2).toString()).toLowerCase().contains(ins.toLowerCase())
                        || (oneRow.get(5).toString()).toLowerCase().contains(lastNameS.toLowerCase())) {
                    rows.add(oneRow);
                }
            } else if (ins.length() != 0) {
                if ((oneRow.get(2).toString()).toLowerCase().contains(ins.toLowerCase())) {
                    rows.add(oneRow);
                }
            } else if (lastNameS.length() != 0) {
                if ((oneRow.get(5).toString()).toLowerCase().contains(lastNameS.toLowerCase())) {
                    rows.add(oneRow);
                }
            } else if (sso.length() != 0) {
                if ((oneRow.get(1).toString()).toLowerCase().contains(sso.toLowerCase())) {
                    rows.add(oneRow);
                }
            } else{
                rows.add(oneRow);
            }
        }
        productDTM.setDataVector(rows, cols);
    }

    public static void main(String[] args) {
        AddCustomerSO a = new AddCustomerSO(null);
        a.setVisible(true);
    }
}
